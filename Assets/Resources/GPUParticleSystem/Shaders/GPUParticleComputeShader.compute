// Update kernel
#pragma kernel UPDATE

struct Particle
{
    float3 position;
    float pad;
};

uniform RWStructuredBuffer<Particle> gParticleBufferIN;

uniform RWStructuredBuffer<Particle> gParticleBufferOUT;

uniform int gParticleCount = 0;

[numthreads(64,1,1)]
void UPDATE(uint3 id : SV_DispatchThreadID)
{
    uint tID = id.x;

    if (tID >= gParticleCount) return;

    Particle pSelf = gParticleBufferIN[tID];

    gParticleBufferOUT[tID] = pSelf;
}

// Emitt kernel
//#pragma kernel EMITT
//
//RWStructuredBuffer<float4> POSITION_IN;
//
//RWStructuredBuffer<float4> POSITION_OUT;
//
//[numthreads(64, 1, 1)]
//void UPDATE(uint3 id : SV_DispatchThreadID)
//{
//    uint tID = id.x;
//    float4 self_position = POSITION_IN[tID];
//
//    POSITION_OUT[tID] = self_position;
//}

